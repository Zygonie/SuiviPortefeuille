@model SuiviPortefeuilleRBC.Models.ManagePortfolioViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Manage Portfolio</h2>

@using(Ajax.BeginForm("StockList",
    "ManagePortfolio",
    null,
    new AjaxOptions() { UpdateTargetId = "stockList" },
    new { id = "PtfIdsajaxForm" }))
{
    @Html.DropDownListFor(m => m.CurrentPortfolioId,
    new SelectList(Model.PortfolioIds),
    new { onchange = "changePortfolioId()" })
}

<button id="btnAddLine" class="btn btn-default" data-toggle="modal" data-target="#newOperation">Add Operation</button>
<div id="stockList">
    @Html.Action("StockList", "ManagePortfolio", new { currentPortfolioId = Model.CurrentPortfolioId })
</div>

<div id="newOperation" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content" id="myModalContent"></div>
    </div>
</div>

<div class="container">
    <input type="button" id="sendmessage" value="Send" />
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/signalr")
    <script src="~/signalr/hubs"></script>
    <script>
    $(function () {
        var url = '@Url.Action("DisplayAddOperation", "ManagePortfolio", new { currentPortfolioId = Model.CurrentPortfolioId })';
        $('#btnAddLine').click(function () {
            $('#myModalContent').load(url, function (response, status, xhr) {
                if (status == "error") {
                    var msg = "Sorry but there was an error: ";
                    $("#error").html(msg + xhr.status + " " + xhr.statusText);
                }
                else {
                    $('#newOperation').modal('show');
                }
            });
        })

        $("#newOperation").on("show.bs.modal", function () {
            console.log("show.bs.modal");
            $("#Date").datepicker();
        });

        $("button[value='buysell']").click(function () {
            var url = $(this).data("url");
            $('#myModalContent').load(url, function (response, status, xhr) {
                if (status == "error") {
                    var msg = "Sorry but there was an error: ";
                    $("#error").html(msg + xhr.status + " " + xhr.statusText);
                }
                else {
                    $('#newOperation').modal('show');
                }
            });
        });

        var onSubmitSuccess = function (result) {
            $('#newOperation').modal('hide');
            if (typeof result.success != 'undefined') {
                if (!result.success) {
                    alert('Operation could not be added');
                } else {
                    alert('Impossible!');
                }
            }
            else {
                alert('Operation has been added');
            }
        };

        var changePortfolioId = function () {
            $("#PtfIdsajaxForm").submit();
        };

        //TestChat
        // Declare a proxy to reference the hub.
        var ticker = $.connection.stockHub;
        // Create a function that the hub can call to broadcast messages.
        ticker.client.updateStockPrice = function (description) {
            var code = description.Code.replace(".",""),
                price = description.LastPrice,
                columnPrice = $('#colPrice').index(),
                columnChange = $('#colChange').index(),
                row = $('#' + code),
                priceCell = row.find('td').eq(columnPrice),
                changeCell = row.find('td').eq(columnChange),
                oldPrice = priceCell.text(),
                newPrice = description.LastPrice,
                changePercent = description.ChangePercent * 100;

            priceCell.text(newPrice);
            changeCell.text(changePercent.toFixed(2) + " %");
            if(oldPrice > newPrice){
                priceCell.css( "color", "white" );
                changeCell.css( "color", "white" );
                priceCell.animate({backgroundColor: 'red'}, 'fast').animate({backgroundColor: 'transparent'}, 'fast').css( "color", "red" );
                changeCell.animate({backgroundColor: 'red'}, 'fast').animate({backgroundColor: 'transparent'}, 'fast').css( "color", "red" );
            }
            else if(oldPrice < newPrice){
                priceCell.css( "color", "white" );
                changeCell.css( "color", "white" );
                priceCell.animate({backgroundColor: 'green'}, 'fast').animate({backgroundColor: 'transparent'}, 'fast').css( "color", "green" );
                changeCell.animate({backgroundColor: 'green'}, 'fast').animate({backgroundColor: 'transparent'}, 'fast').css( "color", "green" );
            }
            if(changePercent < 0){
                priceCell.css( "color", "red" );
                changeCell.css( "color", "red" );
            }
            else{
                priceCell.css( "color", "green" );
                changeCell.css( "color", "green" );
            }
        };

        // Start the connection.
        function init() {
            var portfolioId = @(Model.CurrentPortfolioId);
            // Call the Send method on the hub.
            ticker.server.getStocksFromServer(portfolioId).done(function (stocks) {
                $.each(stocks, function () {
                    var code = this.Code.replace(".",""),
                        price = this.Description.LastPrice,
                        column = $('#colPrice').index(),
                        row = $('#' + code),
                        priceCell = row.find('td').eq(column);
                    priceCell.text(price);
                });
            });
        }

        $.connection.hub.start().done(init);

        @*$.ajax({
            url: "@Html.Action("StockList", "ManagePortfolio", new { currentPortfolioId = Model.CurrentPortfolioId })",
            data: { /* add other additional parameters */ },
            cache: false,
            type: "GET",
            dataType: "html",
            success: function (data, textStatus, XMLHttpRequest) {
                SetData(data);
        }
    });*@
    })
</script>
}
