@model SuiviPortefeuilleRBC.Models.Operation


<div class="modal-header">
    <h4>
        Stock
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    </h4>
</div>

@using(Ajax.BeginForm("AddOperation",
    "ManagePortfolio",
    null,
    new AjaxOptions { HttpMethod = "POST", OnSuccess = @"onSubmitSuccess", UpdateTargetId = "stockList" },
    new { @class = "form-horizontal", @role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="modal-body">
        @Html.HiddenFor(m => m.PortfolioId)
        <div class="form-group">
            @Html.LabelFor(model => model.Sens, "Sens", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Sens, EnumHelper.GetSelectList(typeof(SuiviPortefeuilleRBC.Models.OperationOnStock), Model.Sens),
                new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sens, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Code, "Code", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfShares, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfShares, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfShares, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Fees, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fees, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fees, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Date, new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                @*<span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>*@
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}